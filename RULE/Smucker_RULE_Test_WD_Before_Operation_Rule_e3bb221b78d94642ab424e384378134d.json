{
    "description": "",
    "type": "WebServiceBeforeOperationRule",
    "signature": {
        "input": [],
        "output": null
    },
    "sourceCode": {
        "version": "1.0",
        "script": "import java.util.HashMap;\r\n\timport java.util.Map;\r\n\timport java.util.Properties;\r\n\timport java.io.ByteArrayInputStream;\r\n\timport java.io.ByteArrayOutputStream;\r\n\timport java.io.InputStream;\r\n\timport java.net.URL;\r\n\timport javax.xml.namespace.QName;\r\n\timport javax.xml.soap.MessageFactory;\r\n\timport javax.xml.soap.SOAPConstants;\r\n\timport javax.xml.soap.SOAPMessage;\r\n\timport javax.xml.ws.Service;\r\n\timport javax.xml.ws.Dispatch;\r\n\r\n\timport org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor;\r\n\timport org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor;\r\n\timport org.apache.ws.security.handler.WSHandlerConstants;\r\n\t\r\n\tURL url = new URL(\"https://asc-uat1.finastrapayments.cloud/gppold/services/QueueListService?wsdl\");\r\n\t\tQName serviceName = new QName(\"http://fundtech.com/SCL/QueueListService\", \"QueueListService\");\r\n\t\tService service = Service.create(url, serviceName);\r\n\t\tString soapRequest = \"<soap:Envelope xmlns:soap=\\\"http://www.w3.org/2003/05/soap-envelope\\\" xmlns:que=\\\"http://fundtech.com/SCL/QueueListService\\\" xmlns:stat=\\\"http://fundtech.com/SCL/StaticDataCommonTypes\\\" xmlns:prul=\\\"http://Fundtech.com/prule-metadata-dto.xsd\\\">\\r\\n\"\r\n\t\t\t\t+ \"    <soap:Header>\\r\\n\"\r\n\t\t\t\t+ \"        <q2:FndtHeader xmlns:q2=\\\"http://fundtech.com/SCL/CommonTypes\\\">\\r\\n\"\r\n\t\t\t\t+ \"            <q2:credentials>\\r\\n\" + \"                <q2:UserID>ADMIN15</q2:UserID>\\r\\n\"\r\n\t\t\t\t+ \"                <q2:Role>ALL1</q2:Role>\\r\\n\" + \"            </q2:credentials>\\r\\n\"\r\n\t\t\t\t+ \"        </q2:FndtHeader>\\r\\n\" + \"    </soap:Header>\\r\\n\" + \"    <soap:Body>\\r\\n\"\r\n\t\t\t\t+ \"        <que:QueueListRequest SkipFormatting=\\\"true\\\">\\r\\n\" + \"            <stat:header>\\r\\n\"\r\n\t\t\t\t+ \"                <stat:UserID>POCIDS</stat:UserID>\\r\\n\" + \"            </stat:header>\\r\\n\"\r\n\t\t\t\t+ \"            <que:ColumnsRequired>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>P_TRX_DIRECTION</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>P_MSG_STS</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>P_DBT_ACCT_NB</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_STTLM_DT_1B</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>P_TIME_STAMP</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_INSTG_AGT_ID_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_INSTG_AGT_NM_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_INSTD_AGT_ID_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_INSTD_AGT_NM_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_DBTR_AGT_BIC_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_DBTR_AGT_ID_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_DBTR_AGT_NM_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_DBTR_ACCT_ID</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_DBTR_BIC</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_DBTR_ID</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_DBTR_NM</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_CDTR_AGT_ID_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_CDTR_AGT_NM_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_CDTR_ID</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_CDTR_NM</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_OMAD</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_IMAD</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_RMT_INF_USTRD</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_STTLM_AMT</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_PRVS_INSTG_AGT_ID_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_PRVS_INSTG_AGT_BIC</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_INTRMY_AGT1_BIC_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_INTRMY_AGT1_ID_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>X_INTRMY_AGT1_NM_2AND</que:column>\\r\\n\"\r\n\t\t\t\t+ \"                <que:column>P_INSTR_ID</que:column>\\r\\n\" + \"            </que:ColumnsRequired>\\r\\n\"\r\n\t\t\t\t+ \"            <que:QueueName>MSG_STS</que:QueueName>\\r\\n\"\r\n\t\t\t\t+ \"            <que:PageDirection>F</que:PageDirection>\\r\\n\" + \"            <que:MID/>\\r\\n\"\r\n\t\t\t\t+ \"            <que:PageSize>200</que:PageSize>\\r\\n\"\r\n\t\t\t\t+ \"            <que:PageNumber>1</que:PageNumber>\\r\\n\"\r\n\t\t\t\t+ \"            <que:SortOrder>X_STTLM_DT_1B</que:SortOrder>\\r\\n\"\r\n   \t\t\t+ \"            <que:Mode>SHOW</que:Mode>\\r\\n\"\r\n\t\t\t\t+ \"            <que:FilterOption>NONE</que:FilterOption>\\r\\n\" + \"            <que:FilterConditions>\\r\\n\"\r\n\t\t\t\t+ \"                <prul:cond lineNumber=\\\"0\\\">\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:andOr>AND</prul:andOr>\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:leftVal CT=\\\"Field\\\" value=\\\"P_MSG_STS\\\"/>\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:op>=</prul:op>\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:rightVal CT=\\\"Value\\\" value=\\\"COMPLETE\\\"/>\\r\\n\"\r\n\t\t\t\t+ \"                </prul:cond>\\r\\n\" + \"                <prul:cond lineNumber=\\\"1\\\">\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:andOr>AND</prul:andOr>\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:leftVal CT=\\\"Field\\\" value=\\\"X_STTLM_DT_1B\\\"/>\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:op>=</prul:op>\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:rightVal CT=\\\"Value\\\" value=\\\"2021-02-12\\\"/>\\r\\n\"\r\n\t\t\t\t+ \"                </prul:cond>\\r\\n\" + \"                <prul:cond lineNumber=\\\"2\\\">\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:andOr>AND</prul:andOr>\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:leftVal CT=\\\"Field\\\" value=\\\"P_DBT_ACCT_NB\\\"/>\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:op>=</prul:op>\\r\\n\"\r\n\t\t\t\t+ \"                    <prul:rightVal CT=\\\"Value\\\" value=\\\"4383737322\\\"/>\\r\\n\"\r\n\t\t\t\t+ \"                </prul:cond>\\r\\n\" + \"            </que:FilterConditions>\\r\\n\"\r\n\t\t\t\t+ \"        </que:QueueListRequest>\\r\\n\" + \"    </soap:Body>\\r\\n\" + \"</soap:Envelope>\\r\\n\";\r\n\r\n\t\t\r\n\t\tDispatch<SOAPMessage> disp = service.createDispatch(new QName(\"http://fundtech.com/SCL/QueueListService\", \"QueueListServiceHttpPort\"), SOAPMessage.class, Service.Mode.MESSAGE);\r\n\t\tdisp.getRequestContext().put(Dispatch.ENDPOINT_ADDRESS_PROPERTY, \"https://asc-uat1.finastrapayments.cloud/gppold/services/QueueListService\");\r\n\r\n\t\tInputStream is = new ByteArrayInputStream(soapRequest.getBytes());\r\n\t\tMessageFactory mf2 = MessageFactory.newInstance(SOAPConstants.SOAP_1_1_PROTOCOL);\r\n\t\tSOAPMessage request = mf2.createMessage(null, is);\r\n\r\n\t\tPasswordCallback pc = new PasswordCallback();\r\n\t\tpc.setKeystorePassword(\"PWDPWDPWD\");\r\n\t\tpc.setWsUsernameTokenPassword(\"abc123\");\r\n\t//\tpc.setKeystorePassword(keystorePassword);\r\n\t//\tpc.setWsUsernameTokenPassword(usernameTokenPassword);\r\n\r\n\t\tfinal String signaturePropRefId = \"serverInSecurityProperties\";\r\n\t\tfinal Properties securityProperties = new Properties();\r\n\t\tsecurityProperties.put(\"org.apache.ws.security.crypto.merlin.keystore.type\", \"JKS\");\r\n\t\tsecurityProperties.put(\"org.apache.ws.security.crypto.merlin.keystore.password\", \"PWDPWDPWD\");\r\n\t\tsecurityProperties.put(\"org.apache.ws.security.crypto.merlin.keystore.file\", \"resources/1088-2301-UA-IDP.jks\");\r\n\t\tsecurityProperties.put(\"org.apache.ws.security.crypto.merlin.keystore.alias\",\"1088-2301-ua-idp.associatedbank.com\");\r\n\r\n\t\tMap<String, Object> outProps = new HashMap<String, Object>();\r\n\t\toutProps.put(signaturePropRefId, securityProperties);\r\n\t\toutProps.put(\"action\", \"UsernameToken Timestamp Signature Encrypt\");\r\n\t\toutProps.put(\"user\", \"ADMIN15\");\r\n\t\toutProps.put(\"passwordType\", \"PasswordText\");\r\n\t\toutProps.put(\"passwordCallbackRef\", pc);\r\n\t\toutProps.put(\"encryptionUser\", \"asc-uat1-ws.finastrapayments.cloud (entrust certification authority - l1k)\");\r\n\t\toutProps.put(\"encryptionKeyIdentifier\", \"DirectReference\");\r\n\t\toutProps.put(\"encryptionParts\",\r\n\t\t\t\t\"{Content}{http://www.w3.org/2003/05/soap-envelope}Body;{Content}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd}UsernameToken\");\r\n\t\toutProps.put(WSHandlerConstants.ENC_PROP_REF_ID, signaturePropRefId);\r\n\t\toutProps.put(\"encryptionSymAlgorithm\", \"http://www.w3.org/2001/04/xmlenc#aes128-cbc\");\r\n\t\toutProps.put(\"encryptionKeyTransportAlgorithm\", \"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\");\r\n\t\toutProps.put(\"signatureUser\", \"1088-2301-ua-idp.associatedbank.com\");\r\n\t\toutProps.put(WSHandlerConstants.SIG_PROP_REF_ID, signaturePropRefId);\r\n\t\toutProps.put(\"signatureKeyIdentifier\", \"DirectReference\");\r\n\t\toutProps.put(\"signatureParts\",\r\n\t\t\t\t\"{Element}{http://www.w3.org/2003/05/soap-envelope}Body;{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp\");\r\n\t\toutProps.put(\"signatureAlgorithm\", \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\");\r\n\t\toutProps.put(\"signatureDigestAlgorithm\", \"http://www.w3.org/2001/04/xmlenc#sha256\");\r\n\t\toutProps.put(\"signatureC14nAlgorithm\", \"http://www.w3.org/2001/10/xml-exc-c14n#\");\r\n\t\tWSS4JOutInterceptor wsout = new WSS4JOutInterceptor(outProps);\r\n\r\n\t\tMap<String, Object> inProps = new HashMap<String, Object>();\r\n\t\tinProps.put(\"action\", \"Signature Encrypt Timestamp\");\r\n\t\tinProps.put(signaturePropRefId, securityProperties);\r\n\t\tinProps.put(WSHandlerConstants.SIG_PROP_REF_ID, signaturePropRefId);\r\n\t\tinProps.put(WSHandlerConstants.DEC_PROP_REF_ID, signaturePropRefId);\r\n\t\tinProps.put(\"passwordCallbackRef\", pc);\r\n\t\t\r\n\t\tWSS4JInInterceptor wsin = new WSS4JInInterceptor(inProps);\r\n\t\t((org.apache.cxf.jaxws.DispatchImpl) disp).getClient().getOutInterceptors().add(wsout);\r\n\t\t((org.apache.cxf.jaxws.DispatchImpl) disp).getClient().getInInterceptors().add(wsin);\r\n\r\n\t\tSOAPMessage response = disp.invoke(request);\r\n\t\tByteArrayOutputStream baos3 = new ByteArrayOutputStream();\r\n\t\tresponse.writeTo(baos3);\r\n\t\tlog.error(baos3);"
    },
    "attributes": {
        "sourceVersion": "1.0"
    },
    "id": "e3bb221b78d94642ab424e384378134d",
    "name": "Test_WD_Before_Operation_Rule",
    "created": "2022-09-13T19:48:04.247Z",
    "modified": "2022-09-13T19:52:22.066Z"
}