{
    "description": "This rule sends a call to webhook to test a string body",
    "type": "WebServiceBeforeOperationRule",
    "signature": {
        "input": [],
        "output": null
    },
    "sourceCode": {
        "version": "1.0",
        "script": "import java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport sailpoint.object.ProvisioningPlan;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\r\nimport sailpoint.object.Application;\r\n\r\nimport sailpoint.tools.Util;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\nimport java.util.HashMap;\r\nimport java.io.IOException;\r\nimport sailpoint.tools.GeneralException;\r\n\r\nlog.info(\"Starting Test Before Operation Rule\");\r\nString userId = \"12345\";\r\nString teamId = \"aiowejf123\";\r\nString url = \"https://webhook.site/8d787bda-d0e9-47f2-be17-9d4b4b3977c6\";\r\n\r\ntry {\r\n\t\t// Make API call to authenticate to the web-service\r\n\t\tlog.debug(\"Inside try method\");\r\n\r\n        // Call API to remove entitlement using the body of the request\r\n        log.debug(\"userId: \" + userId);\r\n        log.debug(\"teamId: \" + teamId);\r\n        log.debug(\"Webhook URL: \" + url);\r\n        String body = \"{\\\"query\\\":\\\"mutation{removeTeamManager(input: { userId: \\\\\\\"\" + userId + \"\\\\\\\" teamId: \\\\\\\"\" + teamId + \"\\\\\\\"}) {userId teamId }}\\\"}\";\r\n        log.debug(\"Body of the query when ManagerOf is not instance of list: \" + body + \" end of body\");\r\n        // Make API call to authorize the token \r\n        OkHttpClient authorizationClient = new OkHttpClient().newBuilder().build();\r\n        MediaType authorizationMediaType = MediaType.parse(\"application/json\");\r\n        RequestBody authorizationRequestBody = RequestBody.create(authorizationMediaType, body);\r\n        Request authorizationRequest = new Request.Builder()\r\n            .url(url)\r\n            .method(\"POST\", authorizationRequestBody)\r\n            .build();\r\n        log.debug(\"After creating auth\");\r\n        Response authorizationResponse = authorizationClient.newCall(authorizationRequest).execute();\r\n        log.debug(\"After auth execute\");\r\n\t\t\r\n\t}\r\n\tcatch (Exception e) {\r\n\t\tlog.error(\"Exception In BeforeOperation Rule:: \" + e);\r\n\t\tlog.error(\": \" + e.getStackTrace());\r\n\t}\r\n\r\n\r\nreturn requestEndPoint;"
    },
    "attributes": {
        "sourceVersion": "1.0"
    },
    "id": "33d647de691e4bd09a38d996f9ae79a9",
    "name": "AA Domo Before Rule",
    "created": "2023-05-04T16:03:45.071Z",
    "modified": "2023-05-05T18:05:42.416Z"
}