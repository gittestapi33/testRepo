{
    "description": "",
    "type": "WebServiceAfterOperationRule",
    "signature": {
        "input": [],
        "output": null
    },
    "sourceCode": {
        "version": "1.0",
        "script": "import java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n//import org.json.JSONArray;\r\n//import org.json.JSONObject;\r\n\r\nimport sailpoint.object.ProvisioningPlan;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\r\n//import connector.common.JsonUtil;\r\n//import sailpoint.connector.webservices.EndPoint;\r\n//import sailpoint.connector.webservices.WebServicesClient;\r\nimport sailpoint.object.Application;\r\n\r\nimport sailpoint.tools.Util;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\nimport java.util.HashMap;\r\n//import org.json.JSONException;\r\nimport java.io.IOException;\r\nimport sailpoint.tools.GeneralException;\r\n\r\nString xsrfToken;\r\nMap updatedMapInfo = new HashMap();\r\n\r\nif(processedResponseObject != null) {\r\n\r\n\ttry {\r\n\t\t\r\n\t\tString password = application.getStringAttributeValue(\"password_CA\");\r\n\t\t\r\n\t\t// Here you will need to capture the XSRF token from the previous response\r\n\t\txsrfToken = restClient.getResponseHeaders().get(\"Set-Cookie\");\r\n\t\txsrfToken = xsrfToken.replace(\"XSRF-TOKEN=\",\"\");\r\n\t\txsrfToken = xsrfToken.replace(\"; Path=/api\",\"\");\r\n\t\t\r\n\t\tString url = requestEndPoint.getFullUrl();\r\n\t\t\r\n\t\tOkHttpClient authorizationClient = new OkHttpClient().newBuilder().build();\r\n\t\tMediaType authorizationMediaType = MediaType.parse(\"application/json\");\r\n\t\tRequestBody authorizationRequestBody = RequestBody.create(authorizationMediaType, \"{\\r\\n    \\\"parameters\\\": [\\r\\n        {\\r\\n            \\\"name\\\": \\\"CAMNamespace\\\",\\r\\n            \\\"value\\\": \\\"OKTA\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"name\\\": \\\"CAMUsername\\\",\\r\\n            \\\"value\\\": \\\"SvcSlptCognosAPI\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"name\\\": \\\"CAMPassword\\\",\\r\\n            \\\"value\\\": \\\"\"+ password +\"\\\"\\r\\n        }\\r\\n    ]\\r\\n}\");\r\n\t\tRequest authorizationRequest = new Request.Builder()\r\n\t\t  .url(url)\r\n\t\t  .method(\"PUT\", authorizationRequestBody)\r\n\t\t  .addHeader(\"X-XSRF-Token\", xsrfToken)\r\n\t\t  .addHeader(\"Cookie\", \"XSRF-TOKEN=\" + xsrfToken)\r\n\t\t  .addHeader(\"Content-Type\", \"application/json\")\r\n\t\t  .build();\r\n\t\t\r\n\t\tResponse authorizationResponse = authorizationClient.newCall(authorizationRequest).execute();\r\n\r\n\t\tString cookie = \"\";\r\n\t\tint i = 0;\r\n\t\tfor (String cookieString: authorizationResponse.headers(\"set-cookie\")) {\r\n\t\t\tString s = cookieString;\r\n\t\t\t\r\n\t\t\tif(null != s) {\r\n\t\t\t\ts = s.replaceAll(\"; Path=/api/v1; Secure\", \"\");\r\n\t\t\t\ts = s.replaceAll(\"; Path=/api/v1;\", \"\");\r\n\t\t\t\ts = s.replaceAll(\"; Path=/api; Secure\", \"\");\r\n\t\t\t\ts = s.replaceAll(\"; Path=/api;\", \"\");\r\n\t\t\t\ts = s.replaceAll(\"HttpOnly\",\"\");\r\n\t\t\t\ts = s.replaceAll(\";\",\"\");\r\n\r\n\t\t\t\t\r\n\t\t\t\tcookie += s;\r\n\t\t\t\tif(++i != authorizationResponse.headers(\"set-cookie\").size()) {\r\n\t\t\t\t\tcookie += \";\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcookie += \";XSRF-TOKEN=\" + xsrfToken;\r\n\t\t\r\n\t\t\r\n\t\tlog.error(\"Completed authorization API call with cookie:\" + cookie);\r\n\t\t\r\n\t\tMap connectorStateMap = new HashMap();\r\n\t\tconnectorStateMap.put(\"accesstoken\",xsrfToken);\r\n\t\tconnectorStateMap.put(\"testCookie\",cookie);\r\n\t\tupdatedMapInfo.put(\"connectorStateMap\",connectorStateMap);\r\n\t}\r\n\tcatch (Exception e) {\r\n\t\tlog.error(\"Exception In AfterOperation Rule:: \" + e);\r\n\t\tlog.error(\": \" + e.getStackTrace());\r\n\t}\r\n}\r\n\r\nreturn updatedMapInfo;"
    },
    "attributes": {
        "sourceVersion": "1.0"
    },
    "id": "51cf9347ce184255a2b005163f606fc0",
    "name": "Jack_Boike_Test_After_Operation_Rule_Cognos",
    "created": "2022-07-07T17:15:24.391Z",
    "modified": "2022-07-07T17:54:41.635Z"
}